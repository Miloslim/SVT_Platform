import React, { ChangeEvent } from "react";

// ============================================================
// üìå Composant : SearchFilter
// üéØ Objectif :
//   - Fournir une barre de recherche pour filtrer les √©l√®ves.
//   - Ajouter un menu d√©roulant permettant de filtrer par classe.
// ============================================================

// === Typage des props pour le composant ===
interface SearchFilterProps {
  searchQuery: string; // Terme de recherche actuel
  filterClass: string; // Classe s√©lectionn√©e pour le filtrage
  setSearchQuery: (query: string) => void; // Fonction pour mettre √† jour le terme de recherche
  setFilterClass: (classe: string) => void; // Fonction pour mettre √† jour la classe s√©lectionn√©e
  classes: { id: number; class_name: string }[]; // Liste des classes disponibles dans la table `classes`
}

const SearchFilter: React.FC<SearchFilterProps> = ({
  searchQuery,
  filterClass,
  setSearchQuery,
  setFilterClass,
  classes,
}) => {
  // ============================================================
  // Fonction : Mise √† jour du terme de recherche (texte)
  // ============================================================
  const handleSearchChange = (e: ChangeEvent<HTMLInputElement>) => {
    setSearchQuery(e.target.value); // Mettre √† jour la recherche dans l'√©tat du parent
  };

  // ============================================================
  // Fonction : Mise √† jour de la classe s√©lectionn√©e dans le menu d√©roulant
  // ============================================================
  const handleFilterChange = (e: ChangeEvent<HTMLSelectElement>) => {
    setFilterClass(e.target.value); // Mettre √† jour la classe filtr√©e dans l'√©tat du parent
  };

  // ============================================================
  // Rendu du composant
  // ============================================================
  return (
    <div className="p-4 bg-gray-100 rounded shadow-md">
      {/* === Barre de recherche === */}
      <input
        type="text"
        value={searchQuery}
        onChange={handleSearchChange}
        placeholder="Rechercher par nom, pr√©nom ou code..."
        className="w-1/2 p-2 border rounded"
      />

      {/* === Menu d√©roulant pour filtrer par classe === */}
      <select
        value={filterClass}
        onChange={handleFilterChange}
        className="w-1/2 p-2 border rounded"
      >
        {/* Option par d√©faut : Toutes les classes */}
        <option value="">Toutes les classes</option>

        {/* G√©n√©rer dynamiquement les options √† partir de la liste `classes` */}
        {classes.map((classe) => (
          <option key={classe.id} value={classe.id}>
            {classe.class_name}
          </option>
        ))}
      </select>
    </div>
  );
};

export default SearchFilter;
