/**
 * üìå Fichier : UniteList.tsx
 * üìç Chemin : src/components/planipeda/entities/UniteList.tsx
 * üéØ Objectif : Affichage des unit√©s dans un tableau avec leurs niveaux et options associ√©s.
 * üõ†Ô∏è Fonctionnalit√©s :
 * - Affichage tabulaire des unit√©s.
 * - Affichage des propri√©t√©s `niveau_nom` et `option_nom` pour chaque unit√©.
 * - Bouton "Modifier" pour chaque ligne, qui d√©clenche la fonction `onEdit` avec l'unit√© correspondante.
 * - Message si aucune unit√© n'est √† afficher.
 */

import React from "react";

// --- D√©finition de l'interface Unite (similaire √† celle de UnitesPage.tsx, mais avec les noms pr√©-calcul√©s) ---
interface Unite {
  id: number;
  titre_unite: string;
  niveau_nom: string; // Nom du niveau, d√©j√† calcul√© dans la page parente
  option_nom: string; // Nom de l'option, d√©j√† calcul√© dans la page parente
}

// --- D√©finition des props du composant UniteList ---
interface Props {
  unites: Unite[]; // Tableau des unit√©s √† afficher
  onEdit: (unite: Unite) => void; // Fonction de callback pour l'√©dition d'une unit√©
}

// --- Composant fonctionnel UniteList ---
const UniteList: React.FC<Props> = ({ unites, onEdit }) => {
  return (
    <div className="unite-list-container overflow-x-auto"> {/* Ajout de overflow-x-auto pour les petits √©crans */}
      {/* --- Tableau des unit√©s --- */}
      <table className="unite-table border-collapse border border-gray-300 w-full min-w-[600px]"> {/* min-w pour √©viter l'√©crasement */}
        <thead>
          <tr className="bg-gray-100">
            <th className="border border-gray-300 px-4 py-2 text-left">Niveau</th>
            <th className="border border-gray-300 px-4 py-2 text-left">Option</th>
            <th className="border border-gray-300 px-4 py-2 text-left">Unit√©</th>
            <th className="border border-gray-300 px-4 py-2 text-center">Action</th>
          </tr>
        </thead>
        <tbody>
          {unites.length > 0 ? (
            // Si des unit√©s sont pr√©sentes, on les mappe pour cr√©er les lignes du tableau
            unites.map((unite) => (
              <tr key={unite.id} className="hover:bg-gray-50">
                <td className="border border-gray-300 px-4 py-2">{unite.niveau_nom || "Non d√©fini"}</td>
                <td className="border border-gray-300 px-4 py-2">{unite.option_nom}</td>
                <td className="border border-gray-300 px-4 py-2">{unite.titre_unite}</td>
                <td className="border border-gray-300 px-4 py-2 text-center">
                  <button
                    className="btn-edit bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600 transition-colors duration-200"
                    onClick={() => onEdit(unite)} // Appel de la fonction onEdit avec l'unit√© actuelle
                  >
                    Modifier
                  </button>
                </td>
              </tr>
            ))
          ) : (
            // Si aucune unit√©, affiche un message
            <tr>
              <td colSpan={4} className="text-center border border-gray-300 px-4 py-2 text-gray-500">
                Aucune unit√© √† afficher.
              </td>
            </tr>
          )}
        </tbody>
      </table>
    </div>
  );
};

export default UniteList;