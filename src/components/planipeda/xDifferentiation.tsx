// ============================================================
// üìå Fichier : Differentiation.tsx
// üéØ Objectif :
//   - G√©rer la diff√©renciation p√©dagogique en fonction des profils d'√©l√®ves.
//   - Proposer des activit√©s adapt√©es aux √©l√®ves avanc√©s ou en difficult√©.
// ============================================================

import React, { useState } from "react";

interface Activity {
  id: number;
  name: string;
  level: "Avanc√©" | "Interm√©diaire" | "En difficult√©";
  description: string;
}

interface StudentProfile {
  id: number;
  name: string;
  profile: "Avanc√©" | "Interm√©diaire" | "En difficult√©";
}

const Differentiation: React.FC = () => {
  // === √âtats pour les profils et activit√©s ===
  const [students, setStudents] = useState<StudentProfile[]>([
    { id: 1, name: "Alice", profile: "Avanc√©" },
    { id: 2, name: "Bob", profile: "En difficult√©" },
    { id: 3, name: "Charlie", profile: "Interm√©diaire" },
  ]);

  const [activities, setActivities] = useState<Activity[]>([
    {
      id: 1,
      name: "R√©solution de probl√®mes complexes",
      level: "Avanc√©",
      description: "Activit√©s orient√©es vers la cr√©ativit√© et l'approfondissement.",
    },
    {
      id: 2,
      name: "R√©vision des bases",
      level: "En difficult√©",
      description: "Exercices fondamentaux pour consolider les acquis.",
    },
    {
      id: 3,
      name: "Projet collaboratif",
      level: "Interm√©diaire",
      description: "Travail en groupe pour renforcer les comp√©tences sociales et acad√©miques.",
    },
  ]);

  const [selectedStudent, setSelectedStudent] = useState<StudentProfile | null>(null);

  // === Fonction pour s√©lectionner un √©tudiant et afficher ses activit√©s adapt√©es ===
  const handleSelectStudent = (student: StudentProfile) => {
    setSelectedStudent(student);
  };

  return (
    <div className="p-6 bg-white rounded shadow-md">
      {/* === Titre Principal === */}
      <h2 className="text-xl font-bold mb-4">Diff√©renciation P√©dagogique</h2>

      {/* === Liste des √©tudiants === */}
      <div className="mb-6">
        <h3 className="text-lg font-semibold">Liste des √âl√®ves</h3>
        <ul className="space-y-2">
          {students.map((student) => (
            <li
              key={student.id}
              onClick={() => handleSelectStudent(student)}
              className="p-4 bg-gray-50 rounded shadow cursor-pointer hover:bg-indigo-100 transition"
            >
              <p className="font-bold">{student.name}</p>
              <p className="text-sm text-gray-600">Profil : {student.profile}</p>
            </li>
          ))}
        </ul>
      </div>

      {/* === Activit√©s adapt√©es √† l'√©l√®ve s√©lectionn√© === */}
      <div>
        {selectedStudent ? (
          <>
            <h3 className="text-lg font-semibold">Activit√©s pour {selectedStudent.name}</h3>
            <ul className="space-y-2">
              {activities
                .filter((activity) => activity.level === selectedStudent.profile)
                .map((filteredActivity) => (
                  <li key={filteredActivity.id} className="p-4 bg-gray-50 rounded shadow">
                    <h4 className="font-bold">{filteredActivity.name}</h4>
                    <p className="text-sm text-gray-600">{filteredActivity.description}</p>
                  </li>
                ))}
            </ul>
          </>
        ) : (
          <p className="text-gray-500">S√©lectionnez un √©tudiant pour afficher les activit√©s adapt√©es.</p>
        )}
      </div>
    </div>
  );
};

export default Differentiation;
